#
# Copyright 2012-2013 National ICT Australia (NICTA)
#
# This software may be used and distributed solely under the terms of
# the MIT license (License).  You should find a copy of the License in
# COPYING or at http://opensource.org/licenses/MIT. By downloading or
# using this software you accept the terms and the liability disclaimer
# in the License.
#
defApplication('oml:app:gpslogger', 'gpslogger') do |app|

  app.version(2, 9, -0)
  app.shortDescription = 'A client for GPSd to obtain geolocation information'
  app.description = %{This application connects to a local or remote GPSd and
reports GPS fixes information, as well as the current GPS time.
  }
  app.path = "@bindir@/gpslogger-oml2"

  app.defProperty('verbose', 'Report fixes on STDOUT', '-v',
		  :type => :boolean, :mnemonic => 'v')

  # Descriptions and units based on gps.h from the GPSd destribution
  app.defMeasurement("gps_data") do |m|
    m.defMetric('lat', :double, :unit => "decimal degree",
		:description => "Latitude")
    m.defMetric('lon', :double, :unit => "decimal degree",
		:description => "Longitude")
    m.defMetric('ele', :double, :unit => "metre",
		:description => "Altitude (valid iff fix is 3d)")
    m.defMetric('track', :double,
		:description => "Course made good (relative to true north)")
    m.defMetric('speed', :double, :unit => "metre/second",
		:description => "Speed over ground")
    m.defMetric('climb', :double,  :unit => "metre/second",
		:description => "Vertical speed  (valid iff fix is 3d)")
    m.defMetric('fix', :string, :unit=> "dimension",
	       :description => "Mode of fix")
    m.defMetric('time', :string,
		:description => "Time of update")
  end
end

# Local Variables:
# mode:ruby
# End:
# vim: ft=ruby:sw=2
