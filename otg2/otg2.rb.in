#
# This is an OMF Definition for the existing application called 'otg2'
# This definition will allow OMF entities to use and instrument this application
#
# Copyright 2004-2010 WINLAB, Rutgers University, USA
# Copyright 2006-2013 National ICT Australia (NICTA)
#
# This software may be used and distributed solely under the terms of
# the MIT license (License).  You should find a copy of the License in
# COPYING or at http://opensource.org/licenses/MIT. By downloading or
# using this software you accept the terms and the liability disclaimer
# in the License.
#
defApplication('oml:app:otg2', 'otg2') do |app|

  app.version(2, 9, -0)
  app.shortDescription = "Programmable traffic generator v2"
  app.description = %{
OTG is a configurable traffic generator. It contains generators
producing various forms of packet streams and port for sending
these packets via various transports, such as TCP and UDP.
This version 2 is compatible with OMLv2
  }
  app.path = "@bindir@/otg2"

  # Define the properties that can be configured for this application
  #
  # syntax: defProperty(name, description, mnemonic = nil, options = nil)
  #
  app.defProperty('generator', 'Type of packet generator to use (cbr or expo)', '-g',
		  :type => :string)
  app.defProperty('udp:broadcast', 'Broadcast', '--udp:broadcast',
		  :type => :integer)
  app.defProperty('udp:dst_host', 'IP address of the Destination', '--udp:dst_host',
		  :type => :string)
  app.defProperty('udp:dst_port', 'Destination Port to send to', '--udp:dst_port',
		  :type => :integer)
  app.defProperty('udp:local_host', 'IP address of this Source node', '--udp:local_host',
		  :type => :string)
  app.defProperty('udp:local_port', 'Local Port of this source node', '--udp:local_port',
		  :type => :integer)
  app.defProperty("cbr:size", "Size of packet", '--cbr:size',
		  :type => :integer, :unit => "Bytes", :dynamic => true)
  app.defProperty("cbr:rate", "Data rate of the flow", '--cbr:rate',
		  :type => :integer, :unit => "kbps", :dynamic => true)
  app.defProperty("exp:size", "Size of packet", '--exp:size',
		  :type => :integer, :unit => "Bytes", :dynamic => true)
  app.defProperty("exp:rate", "Data rate of the flow", '--exp:rate',
		  :type => :integer, :unit => "kbps", :dynamic => true)
  app.defProperty("exp:ontime", "Average length of burst", '--exp:ontime',
		  :type => :integer, :unit => "milliseconds", :dynamic => true)
  app.defProperty("exp:offtime", "Average length of idle time", '--exp:offtime',
		  :type => :integer, :unit => "milliseconds", :dynamic => true)

  # Define the Measurement Points and associated metrics that are available for this application
  #
  app.defMeasurement('udp_out') do |m|
    m.defMetric('ts', :double, :unit => "second",
		:description => "Packet processing timestamp") # XXX: Redundant with OML timestamping
    m.defMetric('flow_id', :guid,
	       :description => "Flow identifier")
    m.defMetric('seq_no', :uint32,
	       :description => "Sequence number of packet in flow")
    m.defMetric('pkt_length', :uint32, :unit => "byte",
	       :description => "Length of packet")
    m.defMetric('dst_host', :string,
	       :description => "Destination address")
    m.defMetric('dst_port', :uint32,
	       :description => "Destination port")
  end
end

# Local Variables:
# mode:ruby
# End:
# vim: ft=ruby:sw=2
