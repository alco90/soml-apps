#
# This is an OMF Definition for the existing application called 'otr2'
# This definition will allow OMF entities to use and instrument this application
#
# Copyright 2004-2010 WINLAB, Rutgers University, USA
# Copyright 2006-2013 National ICT Australia (NICTA)
#
# This software may be used and distributed solely under the terms of
# the MIT license (License).  You should find a copy of the License in
# COPYING or at http://opensource.org/licenses/MIT. By downloading or
# using this software you accept the terms and the liability disclaimer
# in the License.
#
defApplication('oml:app:otr2', 'otr2') do |app|

  app.version(2, 9, -0)
  app.shortDescription = "Programmable traffic sink"
  app.description = %{OTR is a configurable traffic sink. It contains port to
receive packet streams via various transport options, such as TCP and UDP.  This
version 2 is compatible with OMLv2.
  }
  app.path = "@bindir@/otr2"

  # Define the properties that can be configured for this application
  #
  # syntax: defProperty(name, description, parameter, options = nil)
  #
  app.defProperty('udp:local_host', 'IP address of this Destination node', '--udp:local_host',
		  :type => :string)
  app.defProperty('udp:local_port', 'Receiving Port of this Destination node', '--udp:local_port',
		  :type => :integer)

  # Define the Measurement Points and associated metrics that are available for this application
  #
  app.defMeasurement('udp_in') do |m|
    m.defMetric('ts', :double, :unit => "second",
		:description => "Packet processing timestamp") # XXX: Redundant with OML timestamping
    m.defMetric('flow_id', :guid,
	       :description => "Flow identifier")
    m.defMetric('seq_no', :uint32,
	       :description => "Sequence number of packet in flow")
    m.defMetric('pkt_length', :uint32, :unit => "byte",
	       :description => "Length of packet")
    m.defMetric('dst_host', :string,
	       :description => "Source address") # XXX why is it called dst_host?
    m.defMetric('dst_port', :uint32,
	       :description => "Source port") # XXX ditto
  end
end

# Local Variables:
# mode:ruby
# End:
# vim: ft=ruby:sw=2
